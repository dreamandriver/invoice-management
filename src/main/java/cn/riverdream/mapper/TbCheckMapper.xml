<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.riverdream.mapper.TbCheckMapper" >
  <resultMap id="BaseResultMap" type="cn.riverdream.pojo.TbCheck" >
    <id column="SERIALNO" property="serialno" jdbcType="INTEGER" />
    <result column="CHECKNO" property="checkno" jdbcType="VARCHAR" />
    <result column="CONTRACTSERIALNO" property="contractserialno" jdbcType="INTEGER" />
    <result column="INCOMEDATE" property="incomedate" jdbcType="TIMESTAMP" />
    <result column="INCOMEAMOUNT" property="incomeamount" jdbcType="DOUBLE" />
    <result column="TAXPOINT" property="taxpoint" jdbcType="INTEGER" />
    <result column="TAXAMOUNT" property="taxamount" jdbcType="DOUBLE" />
    <result column="PAYAMOUNT" property="payamount" jdbcType="DOUBLE" />
    <result column="PAYDATE" property="paydate" jdbcType="TIMESTAMP" />
    <result column="ACCOUNT" property="account" jdbcType="DOUBLE" />
    <result column="COMPANY" property="company" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="CONSUMERID" property="consumerid" jdbcType="INTEGER" />
    <result column="COMMENT" property="comment" jdbcType="VARCHAR" />
    <result column="CREATEDATE" property="createdate" jdbcType="TIMESTAMP" />
    <result column="CREATEUSER" property="createuser" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    SERIALNO, CHECKNO, CONTRACTSERIALNO, INCOMEDATE, INCOMEAMOUNT, TAXPOINT, TAXAMOUNT, 
    PAYAMOUNT, PAYDATE, ACCOUNT, COMPANY, STATUS, CONSUMERID, COMMENT, CREATEDATE, CREATEUSER
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.riverdream.pojo.TbCheckExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_check
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_check
    where SERIALNO = #{serialno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_check
    where SERIALNO = #{serialno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.riverdream.pojo.TbCheckExample" >
    delete from tb_check
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.riverdream.pojo.TbCheck" >
    insert into tb_check (SERIALNO, CHECKNO, CONTRACTSERIALNO, 
      INCOMEDATE, INCOMEAMOUNT, TAXPOINT, 
      TAXAMOUNT, PAYAMOUNT, PAYDATE, 
      ACCOUNT, COMPANY, STATUS, 
      CONSUMERID, COMMENT, CREATEDATE, 
      CREATEUSER)
    values (#{serialno,jdbcType=INTEGER}, #{checkno,jdbcType=VARCHAR}, #{contractserialno,jdbcType=INTEGER}, 
      #{incomedate,jdbcType=TIMESTAMP}, #{incomeamount,jdbcType=DOUBLE}, #{taxpoint,jdbcType=INTEGER}, 
      #{taxamount,jdbcType=DOUBLE}, #{payamount,jdbcType=DOUBLE}, #{paydate,jdbcType=TIMESTAMP}, 
      #{account,jdbcType=DOUBLE}, #{company,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{consumerid,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, 
      #{createuser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.riverdream.pojo.TbCheck" >
    insert into tb_check
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="serialno != null" >
        SERIALNO,
      </if>
      <if test="checkno != null" >
        CHECKNO,
      </if>
      <if test="contractserialno != null" >
        CONTRACTSERIALNO,
      </if>
      <if test="incomedate != null" >
        INCOMEDATE,
      </if>
      <if test="incomeamount != null" >
        INCOMEAMOUNT,
      </if>
      <if test="taxpoint != null" >
        TAXPOINT,
      </if>
      <if test="taxamount != null" >
        TAXAMOUNT,
      </if>
      <if test="payamount != null" >
        PAYAMOUNT,
      </if>
      <if test="paydate != null" >
        PAYDATE,
      </if>
      <if test="account != null" >
        ACCOUNT,
      </if>
      <if test="company != null" >
        COMPANY,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="consumerid != null" >
        CONSUMERID,
      </if>
      <if test="comment != null" >
        COMMENT,
      </if>
      <if test="createdate != null" >
        CREATEDATE,
      </if>
      <if test="createuser != null" >
        CREATEUSER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="serialno != null" >
        #{serialno,jdbcType=INTEGER},
      </if>
      <if test="checkno != null" >
        #{checkno,jdbcType=VARCHAR},
      </if>
      <if test="contractserialno != null" >
        #{contractserialno,jdbcType=INTEGER},
      </if>
      <if test="incomedate != null" >
        #{incomedate,jdbcType=TIMESTAMP},
      </if>
      <if test="incomeamount != null" >
        #{incomeamount,jdbcType=DOUBLE},
      </if>
      <if test="taxpoint != null" >
        #{taxpoint,jdbcType=INTEGER},
      </if>
      <if test="taxamount != null" >
        #{taxamount,jdbcType=DOUBLE},
      </if>
      <if test="payamount != null" >
        #{payamount,jdbcType=DOUBLE},
      </if>
      <if test="paydate != null" >
        #{paydate,jdbcType=TIMESTAMP},
      </if>
      <if test="account != null" >
        #{account,jdbcType=DOUBLE},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="consumerid != null" >
        #{consumerid,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null" >
        #{createuser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.riverdream.pojo.TbCheckExample" resultType="java.lang.Integer" >
    select count(*) from tb_check
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_check
    <set >
      <if test="record.serialno != null" >
        SERIALNO = #{record.serialno,jdbcType=INTEGER},
      </if>
      <if test="record.checkno != null" >
        CHECKNO = #{record.checkno,jdbcType=VARCHAR},
      </if>
      <if test="record.contractserialno != null" >
        CONTRACTSERIALNO = #{record.contractserialno,jdbcType=INTEGER},
      </if>
      <if test="record.incomedate != null" >
        INCOMEDATE = #{record.incomedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.incomeamount != null" >
        INCOMEAMOUNT = #{record.incomeamount,jdbcType=DOUBLE},
      </if>
      <if test="record.taxpoint != null" >
        TAXPOINT = #{record.taxpoint,jdbcType=INTEGER},
      </if>
      <if test="record.taxamount != null" >
        TAXAMOUNT = #{record.taxamount,jdbcType=DOUBLE},
      </if>
      <if test="record.payamount != null" >
        PAYAMOUNT = #{record.payamount,jdbcType=DOUBLE},
      </if>
      <if test="record.paydate != null" >
        PAYDATE = #{record.paydate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.account != null" >
        ACCOUNT = #{record.account,jdbcType=DOUBLE},
      </if>
      <if test="record.company != null" >
        COMPANY = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.consumerid != null" >
        CONSUMERID = #{record.consumerid,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null" >
        COMMENT = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        CREATEDATE = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createuser != null" >
        CREATEUSER = #{record.createuser,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_check
    set SERIALNO = #{record.serialno,jdbcType=INTEGER},
      CHECKNO = #{record.checkno,jdbcType=VARCHAR},
      CONTRACTSERIALNO = #{record.contractserialno,jdbcType=INTEGER},
      INCOMEDATE = #{record.incomedate,jdbcType=TIMESTAMP},
      INCOMEAMOUNT = #{record.incomeamount,jdbcType=DOUBLE},
      TAXPOINT = #{record.taxpoint,jdbcType=INTEGER},
      TAXAMOUNT = #{record.taxamount,jdbcType=DOUBLE},
      PAYAMOUNT = #{record.payamount,jdbcType=DOUBLE},
      PAYDATE = #{record.paydate,jdbcType=TIMESTAMP},
      ACCOUNT = #{record.account,jdbcType=DOUBLE},
      COMPANY = #{record.company,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=INTEGER},
      CONSUMERID = #{record.consumerid,jdbcType=INTEGER},
      COMMENT = #{record.comment,jdbcType=VARCHAR},
      CREATEDATE = #{record.createdate,jdbcType=TIMESTAMP},
      CREATEUSER = #{record.createuser,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.riverdream.pojo.TbCheck" >
    update tb_check
    <set >
      <if test="checkno != null" >
        CHECKNO = #{checkno,jdbcType=VARCHAR},
      </if>
      <if test="contractserialno != null" >
        CONTRACTSERIALNO = #{contractserialno,jdbcType=INTEGER},
      </if>
      <if test="incomedate != null" >
        INCOMEDATE = #{incomedate,jdbcType=TIMESTAMP},
      </if>
      <if test="incomeamount != null" >
        INCOMEAMOUNT = #{incomeamount,jdbcType=DOUBLE},
      </if>
      <if test="taxpoint != null" >
        TAXPOINT = #{taxpoint,jdbcType=INTEGER},
      </if>
      <if test="taxamount != null" >
        TAXAMOUNT = #{taxamount,jdbcType=DOUBLE},
      </if>
      <if test="payamount != null" >
        PAYAMOUNT = #{payamount,jdbcType=DOUBLE},
      </if>
      <if test="paydate != null" >
        PAYDATE = #{paydate,jdbcType=TIMESTAMP},
      </if>
      <if test="account != null" >
        ACCOUNT = #{account,jdbcType=DOUBLE},
      </if>
      <if test="company != null" >
        COMPANY = #{company,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="consumerid != null" >
        CONSUMERID = #{consumerid,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        COMMENT = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        CREATEDATE = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null" >
        CREATEUSER = #{createuser,jdbcType=INTEGER},
      </if>
    </set>
    where SERIALNO = #{serialno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.riverdream.pojo.TbCheck" >
    update tb_check
    set CHECKNO = #{checkno,jdbcType=VARCHAR},
      CONTRACTSERIALNO = #{contractserialno,jdbcType=INTEGER},
      INCOMEDATE = #{incomedate,jdbcType=TIMESTAMP},
      INCOMEAMOUNT = #{incomeamount,jdbcType=DOUBLE},
      TAXPOINT = #{taxpoint,jdbcType=INTEGER},
      TAXAMOUNT = #{taxamount,jdbcType=DOUBLE},
      PAYAMOUNT = #{payamount,jdbcType=DOUBLE},
      PAYDATE = #{paydate,jdbcType=TIMESTAMP},
      ACCOUNT = #{account,jdbcType=DOUBLE},
      COMPANY = #{company,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      CONSUMERID = #{consumerid,jdbcType=INTEGER},
      COMMENT = #{comment,jdbcType=VARCHAR},
      CREATEDATE = #{createdate,jdbcType=TIMESTAMP},
      CREATEUSER = #{createuser,jdbcType=INTEGER}
    where SERIALNO = #{serialno,jdbcType=INTEGER}
  </update>
</mapper>